name: CI/CD Workflow

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:

  push:
    branches: [ "master" ]
    paths:
      - 'app/**'
      - 'tests/**'
      - '.github/workflows/**'

env:
  REPO_NAME: ${{ github.repository }}
  IMAGE_TAG: ${{ github.sha }}


jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push Docker image
        run: |
          echo "Build and push Docker image to Docker Hub"
          ./build.sh ${{ secrets.DOCKERHUB_USERNAME }} ${{ env.REPO_NAME }} ${{ env.IMAGE_TAG }}
      
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: image-info
          path: image_info.txt
  
  test:

    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Run unit-test
        run: |
          echo "Run unit-test"
          ./test.sh ${{ secrets.DOCKERHUB_USERNAME }} ${{ env.REPO_NAME }} ${{ env.IMAGE_TAG }}

  deploy:

    needs: [build, test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: image-info
          path: ./
      
      - name: Setup SSH agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      
      - name: Test Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER_NAME }}@${{ secrets.EC2_HOST_NAME }} "echo 'Hello World'"

      - name: Make docker-compose and Deploy
        run: |
          echo "Make docker-compose.yaml"
          IMAGE_INFO=$(cat image_info.txt)
          ./deploy.sh $IMAGE_INFO  ${{ secrets.EC2_USER_NAME }} ${{ secrets.EC2_HOST_NAME }}
      
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-compose-yaml
          path: docker-compose.yaml
